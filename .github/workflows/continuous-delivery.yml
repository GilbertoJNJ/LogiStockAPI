name: Continuous Delivery

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Modify application.yml
        run: |
          sed -i "s|^ *active:.*|    active: default|" src/main/resources/application.yml
          sed -i "s|^ *url:.*|    url: ${{ secrets.DATASOURCE_URL }}|" src/main/resources/application.yml
          sed -i "s|^ *username:.*|    username: ${{ secrets.DATASOURCE_USERNAME }}|" src/main/resources/application.yml
          sed -i "s|^ *password:.*|    password: ${{ secrets.DATASOURCE_PASSWORD }}|" src/main/resources/application.yml
          cat src/main/resources/application.yml

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean install

      - name: Build Docker image
        run: |
          docker build -t logistock-image .
          docker tag logistock-image:latest gilbertojnj/logistock-image:latest

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: gilbertojnj
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image to Docker Hub
        run: docker push gilbertojnj/logistock-image:latest

      - name: Deploy Docker container to EC2
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST_NAME: ${{ secrets.EC2_HOST }}
          USER_NAME: ${{ secrets.EC2_USERNAME }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOST_NAME} 'docker run -d --name logistock -p 80:8080 gilbertojnj/logistock-image:latest'